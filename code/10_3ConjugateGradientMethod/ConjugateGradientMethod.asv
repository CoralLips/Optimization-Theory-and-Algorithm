function [fmin,xmin]=ConjugateGradientMethod(x0)

% initialization
epsilon=1.0e-15;
fmin=inf;
xmin=x0;
xk=x0;
gk=grad_obj(xk);
dk=-gk;

% iteration
for i=1:length(x0)
    % line search
    alphak=fminbnd(@(alpha) phi(alpha,xk,dk),0,10);
    % update xk
    xk=xk+alphak*dk;
    gk=grad_obj(xk);
    
    
    % stop criterion   
   if norm(gk)<epsilon
       xmin=xk;
       fmin=obj(xmin);
       break;
   else
       % search direction
       dk=-Hk*gk;
       % step size
       
       % update point
       tempxk=xk;
       xk=xk+alphak*dk;       
       % update Hk
       tempgk=gk;
       gk=grad_obj(xk);
       sk=xk-tempxk;
       yk=gk-tempgk;
       % DFP
%        Hk=Hk+(sk*sk')/(sk'*yk)-(Hk*yk*yk'*Hk)/(yk'*Hk*yk);
       % BFGS
       Hk=Hk+(gk*gk')/(gk'*dk)+(yk*yk')/(alphak*yk'*dk);
       
   end
end

